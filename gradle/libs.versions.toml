[versions]
minio = "8.5.17"
jjwt = "0.12.6"
h2 = "2.3.232"
minio-version = "1.21.0"
spring-doc = "2.8.8"

[libraries]
elasticsearch = { module = "org.testcontainers:elasticsearch" }
junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
lombok = { module = "org.projectlombok:lombok" }
kafka = { module = "org.testcontainers:kafka" }
minio = { module = "io.minio:minio", version.ref = "minio" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
projectlombok-lombok = { module = "org.projectlombok:lombok" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
postgresql-postgresql = { module = "org.postgresql:postgresql" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
postgresql = { module = "org.testcontainers:postgresql" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-data-elasticsearch = { module = "org.springframework.boot:spring-boot-starter-data-elasticsearch" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test" }
springdoc-openapi-starter = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-doc" }
testcontainers-minio = { module = "org.testcontainers:minio", version.ref = "minio-version" }